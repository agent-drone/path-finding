name: Build Wheels

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build_wheels:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache vcpkg installed packages to speed up subsequent runs
      - name: Cache vcpkg packages
        uses: actions/cache@v4
        with:
          path: |
            ./vcpkg/installed
            ./vcpkg/buildtrees
            ./vcpkg/packages
            ./vcpkg/downloads
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}

      # Cache entire vcpkg root to avoid re-cloning if unchanged
      - name: Cache vcpkg root
        uses: actions/cache@v4
        with:
          path: ./vcpkg
          key: ${{ runner.os }}-vcpkg-root

      - name: Install dependencies & vcpkg
        run: |
          # Clone vcpkg if not cached
          if [ ! -d "./vcpkg" ]; then
            git clone https://github.com/microsoft/vcpkg.git
          fi
          cd ./vcpkg
          git pull
          cd ..
          ./vcpkg/vckpkg update
          ./vcpkg/bootstrap-vcpkg.sh
          ./vcpkg/vcpkg install ompl octomap pybind11

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip
          pip install scikit-build-core[pyproject] cibuildwheel auditwheel patchelf twine setuptools wheel

      - name: Build wheels with cibuildwheel
        env:
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_BUILD: "cp311-*"
          CMAKE_TOOLCHAIN_FILE: "${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: List built wheels
        run: ls -l wheelhouse
