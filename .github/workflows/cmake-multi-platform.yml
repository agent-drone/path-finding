name: Build Wheels
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          pybuilds: cp3{10,11,12,13}-manylinux_x86_64
          arch: x86_64
          id: linux_x86_64
        - os: ubuntu-24.04-arm
          pybuilds: cp3{10,11,12,13}-manylinux_aarch64
          arch: aarch64
          id: linux_arm64
        - os: macos-13
          pybuilds: cp3{10,11,12,13}-macosx_x86_64
          arch: x86_64
          id: macos_x86
        - os: macos-15
          pybuilds: cp3{10,11,12,13}-macosx_arm64
          arch: arm64
          id: macos_arm64
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.1
        with:
          output-dir: wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.pybuilds }}
          CIBW_BEFORE_ALL: yum install -y curl zip tar unzip epel-release cmake make gcc-c++ bzip2 wget git zip unzip tar perl-IPC-Cmd autoconf libtool intltool automake autoconf-archive gettext && git clone https://github.com/microsoft/vcpkg.git && ./vcpkg/bootstrap-vcpkg.sh
          CIBW_BEFORE_BUILD: ./vcpkg/vcpkg install octomap && ./vcpkg/vcpkg install ompl 
          CIBW_ENVIRONMENT: CMAKE_TOOLCHAIN_FILE="vcpkg/scripts/buildsystems/vcpkg.cmake"
          CIBW_SKIP: "cp*-manylinux_i686 cp*-musllinux* cp*-win32"       

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: wheelhouse
