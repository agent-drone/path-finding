name: Build Wheels
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          pybuilds: cp3{10,11,12,13}-manylinux_x86_64
          arch: x86_64
          id: linux_x86_64
        - os: ubuntu-24.04-arm
          pybuilds: cp3{10,11,12,13}-manylinux_aarch64
          arch: aarch64
          id: linux_arm64
        - os: macos-13
          pybuilds: cp3{10,11,12,13}-macosx_x86_64
          arch: x86_64
          id: macos_x86
        - os: macos-15
          pybuilds: cp3{10,11,12,13}-macosx_arm64
          arch: arm64
          id: macos_arm64
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        with:
          package-dir: .
        env:
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y epel-release
            yum install -y cmake make gcc-c++ bzip2 wget git tar sudo

            boost_version=1.87.0
            curl -L "https://archives.boost.io/release/${boost_version}/source/boost_${boost_version//./_}.tar.bz2" | tar xj
            python_include_path=$(python3 -c "from sysconfig import get_paths as gp; print(gp()['include'])")
            pip install numpy
            
            ./bootstrap.sh
            sudo ./b2 \
            --with-serialization \
            --with-filesystem \
            --with-system \
            --with-program_options \
            --with-python \
            install
            
            git clone https://github.com/ompl/ompl.git
            cd ompl && mkdir -p build/Release && cd build/Release
            cmake ../.. -DCMAKE_INSTALL_PREFIX=/usr/local
            make -j$(nproc) && make install
            cd ../../..
        
            git clone https://github.com/OctoMap/octomap.git
            cd octomap && mkdir build && cd build
            cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local
            make -j$(nproc) && make install
            cd ../..
        
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          OMPL_BUILD_ARCH: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.pybuilds }}
          CIBW_SKIP: "cp*-manylinux_i686 cp*-musllinux* cp*-win32"
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET="15.0"
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: wheelhouse
